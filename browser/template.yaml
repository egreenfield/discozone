AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  browser

  Sample SAM Template for browser

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Parameters:
  LambdaSg:
    Description: "Lambda security group ID"
    Type: AWS::EC2::SecurityGroup::Id
  LambdaSubnets:
    Description: "Lambda subnets"
    Type: List<AWS::EC2::Subnet::Id>
  DBUsername:
    NoEcho: 'true'
    Description: Username for MySQL database access
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBPassword:
    NoEcho: 'true'
    Description: Password MySQL database access
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.

Resources:
  DanceDatabaseCluster:
    Type: 'AWS::RDS::DBCluster'
    Properties:
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      DBClusterIdentifier: disco-serverless-db
      Engine: aurora
      EngineVersion: 5.6.10a
      EngineMode: serverless
      ScalingConfiguration:
        AutoPause: true
        MinCapacity: 4
        MaxCapacity: 32
        SecondsUntilAutoPause: 1000


  DiscoApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: Disco Api Gateway
      StageName: Prod
      Cors:
        AllowMethods: "'POST, GET'"
        AllowOrigin: "'*'"
        MaxAge: "'600'"


  HomePageFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: disco_base/
      Handler: server_app.homepage
      Runtime: python3.8
      Policies:
        - VPCAccessPolicy: {}
        - S3FullAccessPolicy:
            BucketName: "*"
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSg
        SubnetIds: !Ref LambdaSubnets
      Events:
        HomePage:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref DiscoApiGateway
            Path: /
            Method: get


  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: disco_base/
      Handler: server_app.hello_world
      Runtime: python3.8
      Policies:
        - VPCAccessPolicy: {}
        - S3FullAccessPolicy:
            BucketName: "*"
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSg
        SubnetIds: !Ref LambdaSubnets
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref DiscoApiGateway
            Path: /hello_world
            Method: get

  ShowVideoFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: disco_base/
      FunctionName: show-video
      Handler: server_app.show_video
      Runtime: python3.8
      Events:
        ShowVideo:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref DiscoApiGateway
            Path: /video/{id}
            Method: get

  ListVideosFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: disco_base/
      Handler: server_app.list_videos
      Runtime: python3.8
      Environment:
        Variables:
          DBUSERNAME: !Ref DBUsername
          DBPASSWORD: !Ref DBPassword
          DBCONNECTION: !GetAtt DanceDatabaseCluster.Endpoint.Address
      Events:
        HomePage:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref DiscoApiGateway
            Path: /video
            Method: get

  InitDBFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: disco_base/
      Handler: server_app.init_db
      Runtime: python3.8
      Policies:
        - VPCAccessPolicy: {}
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSg
        SubnetIds: !Ref LambdaSubnets
      Environment:
        Variables:
          DBUSERNAME: !Ref DBUsername
          DBPASSWORD: !Ref DBPassword
          DBCONNECTION: !GetAtt DanceDatabaseCluster.Endpoint.Address
            
            
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HomePageApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${DiscoApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  HomePageFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HomePageFunction.Arn
  HomePageFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HomePageFunctionRole.Arn
